[workspace]
members = [
    "crates/protocol",
    "crates/checksums",
    "crates/filelist",
    "crates/filters",
    "crates/walk",
    "crates/meta",
    "crates/compress",
    "crates/engine",
    "crates/transport",
    "crates/daemon",
    "crates/cli",
    "crates/logging",
    "xtask",
]
resolver = "2"

[package]
name = "oc-rsync"
version = "0.1.0"
description = "Pure-Rust reimplementation of rsync (protocol v32)"
license = "Apache-2.0 OR MIT"
edition = "2021"
build = "build.rs"

[dependencies]
protocol = { path = "crates/protocol" }
checksums = { path = "crates/checksums" }
engine = { path = "crates/engine", default-features = false }
filters = { path = "crates/filters" }
compress = { path = "crates/compress" }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
clap_complete = "4"
rustc_lexer = "0.1"
logging = { path = "crates/logging" }
tracing = "0.1"
filetime = "0.2"
clap = { version = "4" }
oc-rsync-cli = { path = "crates/cli" }
libc = "0.2"
meta = { path = "crates/meta", default-features = false }

[target.'cfg(unix)'.dependencies]
nix = { version = "0.27", features = ["user", "fs"] }
posix-acl = { version = "1.2", optional = true }

[dev-dependencies]
tempfile = "3"
assert_cmd = "2"
predicates = "3"
serial_test = "2"
transport = { path = "crates/transport" }
shell-words = "1.1"
wait-timeout = "0.2"
daemon = { path = "crates/daemon" }
sha2 = "0.10"
encoding_rs = "0.8"
insta = { version = "1", features = ["json"] }
hex = "0.4"
walkdir = "2"

[target.'cfg(unix)'.dev-dependencies]
nix = { version = "0.27", features = ["user", "fs", "process"] }
users = "0.11"
xattr = "1.3"

[build-dependencies]
time = { version = "0.3", default-features = false, features = ["std"] }
pkg-config = "0.3"

[[bin]]
name = "oc-rsync"
path = "src/bin/oc-rsync/main.rs"

[[bin]]
name = "oc-rsyncd"
path = "src/bin/oc-rsyncd.rs"

[[bin]]
name = "flag_matrix"
path = "tools/flag_matrix.rs"

[[bin]]
name = "gen-completions"
path = "tools/gen_completions.rs"
required-features = ["cli"]

[[bin]]
name = "strip-rs-comments"
path = "tools/strip_rs_comments.rs"

# Enable extended attribute and ACL support by default so tests can run
# without requiring feature flags. Individual crates handle runtime
# detection of platform support.
[features]
default = ["xattr", "acl"]
xattr = ["engine/xattr"]
acl = ["engine/acl", "meta/acl", "posix-acl"]
# Enables CLI-only tools
cli = []
# Enables AVX-512 implementations requiring a nightly toolchain
nightly = ["checksums/nightly", "compress/nightly"]

[package.metadata.deb]
maintainer = "oc-rsync maintainers <maintainers@rsync.rs>"
depends = "$auto, systemd"
assets = [
    ["packaging/systemd/oc-rsyncd.service", "/lib/systemd/system/oc-rsyncd.service", "644"],
    ["packaging/examples/oc-rsyncd.conf", "/usr/share/doc/oc-rsync/examples/oc-rsyncd.conf", "644"],
    ["packaging/systemd/oc-rsyncd.conf", "/usr/share/doc/oc-rsync/examples/oc-rsyncd.systemd.conf", "644"],
]

[package.metadata.rpm]
maintainer = "oc-rsync maintainers <maintainers@rsync.rs>"
requires = ["systemd"]

[package.metadata.rpm.targets.oc-rsync]
path = "/usr/bin/oc-rsync"

[package.metadata.rpm.targets.oc-rsyncd]
path = "/usr/bin/oc-rsyncd"

[package.metadata.rpm.files."oc-rsyncd.conf"]
path = "/usr/share/doc/oc-rsync/examples/oc-rsyncd.conf"
mode = "644"

[package.metadata.rpm.files."oc-rsyncd.systemd.conf"]
path = "/usr/share/doc/oc-rsync/examples/oc-rsyncd.systemd.conf"
mode = "644"

[package.metadata.rpm.files."oc-rsyncd.service"]
path = "/usr/lib/systemd/system/oc-rsyncd.service"
mode = "644"
