[
  {
    "flag": "--verbose",
    "description": "increase verbosity"
  },
  {
    "flag": "--info=FLAGS",
    "description": "fine-grained informational verbosity"
  },
  {
    "flag": "--debug=FLAGS",
    "description": "fine-grained debug verbosity"
  },
  {
    "flag": "--stderr=e|a|c",
    "description": "change stderr output mode (default: errors)"
  },
  {
    "flag": "--quiet",
    "description": "suppress non-error messages"
  },
  {
    "flag": "--no-motd",
    "description": "suppress daemon-mode MOTD"
  },
  {
    "flag": "--checksum",
    "description": "skip based on checksum, not mod-time & size"
  },
  {
    "flag": "--archive",
    "description": "archive mode is -rlptgoD (no -A,-X,-U,-N,-H)"
  },
  {
    "flag": "--no-OPTION",
    "description": "turn off an implied OPTION (e.g. --no-D)"
  },
  {
    "flag": "--recursive",
    "description": "recurse into directories"
  },
  {
    "flag": "--relative",
    "description": "use relative path names"
  },
  {
    "flag": "--no-implied-dirs",
    "description": "don't send implied dirs with --relative"
  },
  {
    "flag": "--backup",
    "description": "make backups (see --suffix & --backup-dir)"
  },
  {
    "flag": "--backup-dir=DIR",
    "description": "make backups into hierarchy based in DIR"
  },
  {
    "flag": "--suffix=SUFFIX",
    "description": "backup suffix (default ~ w/o --backup-dir)"
  },
  {
    "flag": "--update",
    "description": "skip files that are newer on the receiver"
  },
  {
    "flag": "--inplace",
    "description": "update destination files in-place"
  },
  {
    "flag": "--append",
    "description": "append data onto shorter files"
  },
  {
    "flag": "--append-verify",
    "description": "--append w/old data in file checksum"
  },
  {
    "flag": "--dirs",
    "description": "transfer directories without recursing"
  },
  {
    "flag": "--old-dirs",
    "description": "works like --dirs when talking to old rsync"
  },
  {
    "flag": "--mkpath",
    "description": "create destination's missing path components"
  },
  {
    "flag": "--links",
    "description": "copy symlinks as symlinks"
  },
  {
    "flag": "--copy-links",
    "description": "transform symlink into referent file/dir"
  },
  {
    "flag": "--copy-unsafe-links",
    "description": "only \"unsafe\" symlinks are transformed"
  },
  {
    "flag": "--safe-links",
    "description": "ignore symlinks that point outside the tree"
  },
  {
    "flag": "--munge-links",
    "description": "munge symlinks to make them safe & unusable"
  },
  {
    "flag": "--copy-dirlinks",
    "description": "transform symlink to dir into referent dir"
  },
  {
    "flag": "--keep-dirlinks",
    "description": "treat symlinked dir on receiver as dir"
  },
  {
    "flag": "--hard-links",
    "description": "preserve hard links"
  },
  {
    "flag": "--perms",
    "description": "preserve permissions"
  },
  {
    "flag": "--executability",
    "description": "preserve executability"
  },
  {
    "flag": "--chmod=CHMOD",
    "description": "affect file and/or directory permissions"
  },
  {
    "flag": "--acls",
    "description": "preserve ACLs (implies --perms)"
  },
  {
    "flag": "--xattrs",
    "description": "preserve extended attributes"
  },
  {
    "flag": "--owner",
    "description": "preserve owner (super-user only)"
  },
  {
    "flag": "--group",
    "description": "preserve group"
  },
  {
    "flag": "--devices",
    "description": "preserve device files (super-user only)"
  },
  {
    "flag": "--copy-devices",
    "description": "copy device contents as a regular file"
  },
  {
    "flag": "--write-devices",
    "description": "write to devices as files (implies --inplace)"
  },
  {
    "flag": "--specials",
    "description": "preserve special files"
  },
  {
    "flag": "-D",
    "description": "same as --devices --specials"
  },
  {
    "flag": "--times",
    "description": "preserve modification times"
  },
  {
    "flag": "--atimes",
    "description": "preserve access (use) times"
  },
  {
    "flag": "--open-noatime",
    "description": "avoid changing the atime on opened files"
  },
  {
    "flag": "--crtimes",
    "description": "preserve create times (newness)"
  },
  {
    "flag": "--omit-dir-times",
    "description": "omit directories from --times"
  },
  {
    "flag": "--omit-link-times",
    "description": "omit symlinks from --times"
  },
  {
    "flag": "--super",
    "description": "receiver attempts super-user activities"
  },
  {
    "flag": "--fake-super",
    "description": "store/recover privileged attrs using xattrs"
  },
  {
    "flag": "--sparse",
    "description": "turn sequences of nulls into sparse blocks"
  },
  {
    "flag": "--preallocate",
    "description": "allocate dest files before writing them"
  },
  {
    "flag": "--dry-run",
    "description": "perform a trial run with no changes made"
  },
  {
    "flag": "--whole-file",
    "description": "copy files whole (w/o delta-xfer algorithm)"
  },
  {
    "flag": "--checksum-choice=STR",
    "description": "choose the checksum algorithm (aka --cc)"
  },
  {
    "flag": "--one-file-system",
    "description": "don't cross filesystem boundaries"
  },
  {
    "flag": "--block-size=SIZE",
    "description": "force a fixed checksum block-size"
  },
  {
    "flag": "--rsh=COMMAND",
    "description": "specify the remote shell to use"
  },
  {
    "flag": "--rsync-path=PROGRAM",
    "description": "specify the rsync to run on remote machine"
  },
  {
    "flag": "--existing",
    "description": "skip creating new files on receiver"
  },
  {
    "flag": "--ignore-existing",
    "description": "skip updating files that exist on receiver"
  },
  {
    "flag": "--remove-source-files",
    "description": "sender removes synchronized files (non-dir)"
  },
  {
    "flag": "--del",
    "description": "an alias for --delete-during"
  },
  {
    "flag": "--delete",
    "description": "delete extraneous files from dest dirs"
  },
  {
    "flag": "--delete-before",
    "description": "receiver deletes before xfer, not during"
  },
  {
    "flag": "--delete-during",
    "description": "receiver deletes during the transfer"
  },
  {
    "flag": "--delete-delay",
    "description": "find deletions during, delete after"
  },
  {
    "flag": "--delete-after",
    "description": "receiver deletes after transfer, not during"
  },
  {
    "flag": "--delete-excluded",
    "description": "also delete excluded files from dest dirs"
  },
  {
    "flag": "--ignore-missing-args",
    "description": "ignore missing source args without error"
  },
  {
    "flag": "--delete-missing-args",
    "description": "delete missing source args from destination"
  },
  {
    "flag": "--ignore-errors",
    "description": "delete even if there are I/O errors"
  },
  {
    "flag": "--force",
    "description": "force deletion of dirs even if not empty"
  },
  {
    "flag": "--max-delete=NUM",
    "description": "don't delete more than NUM files"
  },
  {
    "flag": "--max-size=SIZE",
    "description": "don't transfer any file larger than SIZE"
  },
  {
    "flag": "--min-size=SIZE",
    "description": "don't transfer any file smaller than SIZE"
  },
  {
    "flag": "--max-alloc=SIZE",
    "description": "change a limit relating to memory alloc"
  },
  {
    "flag": "--partial",
    "description": "keep partially transferred files"
  },
  {
    "flag": "--partial-dir=DIR",
    "description": "put a partially transferred file into DIR"
  },
  {
    "flag": "--delay-updates",
    "description": "put all updated files into place at end"
  },
  {
    "flag": "--prune-empty-dirs",
    "description": "prune empty directory chains from file-list"
  },
  {
    "flag": "--numeric-ids",
    "description": "don't map uid/gid values by user/group name"
  },
  {
    "flag": "--usermap=STRING",
    "description": "custom username mapping"
  },
  {
    "flag": "--groupmap=STRING",
    "description": "custom groupname mapping"
  },
  {
    "flag": "--chown=USER:GROUP",
    "description": "simple username/groupname mapping"
  },
  {
    "flag": "--timeout=SECONDS",
    "description": "set I/O timeout in seconds"
  },
  {
    "flag": "--contimeout=SECONDS",
    "description": "set daemon connection timeout in seconds"
  },
  {
    "flag": "--ignore-times",
    "description": "don't skip files that match size and time"
  },
  {
    "flag": "--size-only",
    "description": "skip files that match in size"
  },
  {
    "flag": "--modify-window=NUM",
    "description": "set the accuracy for mod-time comparisons"
  },
  {
    "flag": "--temp-dir=DIR",
    "description": "create temporary files in directory DIR"
  },
  {
    "flag": "--fuzzy",
    "description": "find similar file for basis if no dest file"
  },
  {
    "flag": "--compare-dest=DIR",
    "description": "also compare destination files relative to DIR"
  },
  {
    "flag": "--copy-dest=DIR",
    "description": "... and include copies of unchanged files"
  },
  {
    "flag": "--link-dest=DIR",
    "description": "hardlink to files in DIR when unchanged"
  },
  {
    "flag": "--compress",
    "description": "compress file data during the transfer"
  },
  {
    "flag": "--compress-choice=STR",
    "description": "choose the compression algorithm (aka --zc)"
  },
  {
    "flag": "--compress-level=NUM",
    "description": "explicitly set compression level (aka --zl)"
  },
  {
    "flag": "--skip-compress=LIST",
    "description": "skip compressing files with suffix in LIST"
  },
  {
    "flag": "--cvs-exclude",
    "description": "auto-ignore files in the same way CVS does"
  },
  {
    "flag": "--filter=RULE",
    "description": "add a file-filtering RULE"
  },
  {
    "flag": "-F",
    "description": "same as --filter='dir-merge /.rsync-filter'"
  },
  {
    "flag": "--exclude=PATTERN",
    "description": "exclude files matching PATTERN"
  },
  {
    "flag": "--exclude-from=FILE",
    "description": "read exclude patterns from FILE"
  },
  {
    "flag": "--include=PATTERN",
    "description": "don't exclude files matching PATTERN"
  },
  {
    "flag": "--include-from=FILE",
    "description": "read include patterns from FILE"
  },
  {
    "flag": "--files-from=FILE",
    "description": "read list of source-file names from FILE"
  },
  {
    "flag": "--from0",
    "description": "all *-from/filter files are delimited by 0s"
  },
  {
    "flag": "--old-args",
    "description": "disable the modern arg-protection idiom"
  },
  {
    "flag": "--secluded-args",
    "description": "use the protocol to safely send the args"
  },
  {
    "flag": "--trust-sender",
    "description": "trust the remote sender's file list"
  },
  {
    "flag": "--copy-as=USER[:GROUP]",
    "description": "specify user & optional group for the copy"
  },
  {
    "flag": "--address=ADDRESS",
    "description": "bind address for outgoing socket to daemon"
  },
  {
    "flag": "--port=PORT",
    "description": "specify double-colon alternate port number"
  },
  {
    "flag": "--sockopts=OPTIONS",
    "description": "specify custom TCP options"
  },
  {
    "flag": "--blocking-io",
    "description": "use blocking I/O for the remote shell"
  },
  {
    "flag": "--outbuf=N|L|B",
    "description": "set out buffering to None, Line, or Block"
  },
  {
    "flag": "--stats",
    "description": "give some file-transfer stats"
  },
  {
    "flag": "--8-bit-output",
    "description": "leave high-bit chars unescaped in output"
  },
  {
    "flag": "--human-readable",
    "description": "output numbers in a human-readable format"
  },
  {
    "flag": "--progress",
    "description": "show progress during transfer"
  },
  {
    "flag": "-P",
    "description": "same as --partial --progress"
  },
  {
    "flag": "--itemize-changes",
    "description": "output a change-summary for all updates"
  },
  {
    "flag": "--remote-option=OPT",
    "description": "send OPTION to the remote side only"
  },
  {
    "flag": "--out-format=FORMAT",
    "description": "output updates using the specified FORMAT"
  },
  {
    "flag": "--log-file=FILE",
    "description": "log what we're doing to the specified FILE"
  },
  {
    "flag": "--log-file-format=FMT",
    "description": "log updates using the specified FMT"
  },
  {
    "flag": "--password-file=FILE",
    "description": "read daemon-access password from FILE"
  },
  {
    "flag": "--early-input=FILE",
    "description": "use FILE for daemon's early exec input"
  },
  {
    "flag": "--list-only",
    "description": "list the files instead of copying them"
  },
  {
    "flag": "--bwlimit=RATE",
    "description": "limit socket I/O bandwidth"
  },
  {
    "flag": "--stop-after=MINS",
    "description": "Stop rsync after MINS minutes have elapsed"
  },
  {
    "flag": "--stop-at=y-m-dTh:m",
    "description": "Stop rsync at the specified point in time"
  },
  {
    "flag": "--fsync",
    "description": "fsync every written file"
  },
  {
    "flag": "--write-batch=FILE",
    "description": "write a batched update to FILE"
  },
  {
    "flag": "--only-write-batch=FILE",
    "description": "like --write-batch but w/o updating dest"
  },
  {
    "flag": "--read-batch=FILE",
    "description": "read a batched update from FILE"
  },
  {
    "flag": "--protocol=NUM",
    "description": "force an older protocol version to be used"
  },
  {
    "flag": "--iconv=CONVERT_SPEC",
    "description": "request charset conversion of filenames"
  },
  {
    "flag": "--checksum-seed=NUM",
    "description": "set block/file checksum seed (advanced)"
  },
  {
    "flag": "--ipv4",
    "description": "prefer IPv4"
  },
  {
    "flag": "--ipv6",
    "description": "prefer IPv6"
  },
  {
    "flag": "--version",
    "description": "print the version + other info and exit"
  },
  {
    "flag": "--help",
    "description": "show this help (* -h is help only on its own)"
  }
]