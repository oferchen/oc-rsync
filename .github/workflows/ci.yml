name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:

jobs:
  test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - run: rustup component add rustfmt clippy
      - name: Install cross
        if: matrix.use-cross == true
        run: cargo install cross --locked
      - name: Install cargo-fuzz
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: |
          cargo install cargo-fuzz --locked
          rustup toolchain install nightly
      - name: Generate flag matrix
        run: |
          cargo run --bin flag_matrix
          git diff --exit-code tools/flag_matrix.md tools/flag_matrix.json
      - name: Format
        run: cargo fmt --all --check
      - name: Clippy
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross clippy --all-targets --all-features --target ${{ matrix.target }} -- -D warnings
          else
            cargo clippy --all-targets --all-features -- -D warnings
          fi
      - name: Tests
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross test --all --target ${{ matrix.target }}
          else
            cargo test --all --target ${{ matrix.target }}
          fi
      - name: Golden parity tests
        if: matrix.use-cross == false
        run: make test-golden
      - name: Fuzz smoke test
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: timeout 30s cargo +nightly fuzz run filters_parse_fuzz -- -max_total_time=10

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install cross
        if: matrix.use-cross == true
        run: cargo install cross --locked
      - name: Build release binary
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin rsync-rs
          else
            cargo build --release --target ${{ matrix.target }} --bin rsync-rs
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rsync-rs-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rsync-rs
