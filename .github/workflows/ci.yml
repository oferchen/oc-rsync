name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  LC_ALL: C
  LANG: C
  COLUMNS: 80

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev
      - name: Format
        run: cargo fmt --all --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Verify comments
        run: make verify-comments
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: Test with coverage
        run: cargo llvm-cov --all-features --fail-under-lines 95 --fail-under-functions 95
      - name: Validate interop matrix docs
        run: scripts/check-run-matrix-docs.sh
      - name: Check CLI help against docs
        run: |
          cargo run --quiet --bin oc-rsync -- --help > /tmp/oc-rsync-help.txt
          diff -u docs/cli.md /tmp/oc-rsync-help.txt
      - name: Check manpages against spec
        run: |
          diff -u man/oc-rsync.1 docs/spec/rsync.1
          diff -u man/oc-rsyncd.conf.5 docs/spec/rsyncd.conf.5
      - name: Cross-compile check
        run: |
          rustup target add x86_64-apple-darwin x86_64-pc-windows-msvc
          cargo check --workspace --target x86_64-apple-darwin
          cargo check --workspace --target x86_64-pc-windows-msvc

  build:
    needs: lint-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --bin oc-rsync
      - name: Package artifacts
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/oc-rsync dist/oc-rsync-${{ matrix.target }}
          sha256sum dist/oc-rsync-${{ matrix.target }} > dist/oc-rsync-${{ matrix.target }}.sha256
          cargo install cargo-sbom || true
          cargo sbom --output dist/oc-rsync-${{ matrix.target }}-sbom.json
      - uses: actions/upload-artifact@v4
        with:
          name: oc-rsync-${{ matrix.target }}
          path: dist

  upstream-rsync:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libssl-dev zlib1g-dev libacl1-dev
      - name: Build oc-rsync
        run: cargo build --release --bin oc-rsync
      - name: Fetch upstream rsync
        run: scripts/fetch-rsync.sh
      - name: Build upstream rsync
        run: |
          cd rsync-3.4.1
          ./configure
          make
      - name: Diff --version
        run: |
          diff <(./target/release/oc-rsync --version) <(rsync-3.4.1/rsync --version) || true
      - name: Diff --help
        run: |
          diff <(./target/release/oc-rsync --help) <(rsync-3.4.1/rsync --help) || true
      - name: Check option tables
        run: scripts/check-option-table.sh

