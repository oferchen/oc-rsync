name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  LC_ALL: C
  LANG: C
  COLUMNS: 80

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev
      - name: Format
        run: cargo fmt --all --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Verify comments
        run: make verify-comments
      - name: Validate interop matrix docs
        run: scripts/check-run-matrix-docs.sh
      - name: Check CLI help against transcript
        run: |
          cargo run --quiet --bin oc-rsync -- --help | tail -n +4 > /tmp/oc-rsync-help.txt
          diff -u tests/golden/help/oc-rsync.help /tmp/oc-rsync-help.txt
      - name: Check manpages against spec
        run: |
          diff -u man/oc-rsync.1 docs/spec/rsync.1
          diff -u man/oc-rsyncd.conf.5 docs/spec/rsyncd.conf.5
      - name: Cross-compile check
        run: |
          rustup target add x86_64-apple-darwin x86_64-pc-windows-msvc
          cargo check --workspace --target x86_64-apple-darwin
          cargo check --workspace --target x86_64-pc-windows-msvc

  test-linux:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Test with coverage
        run: cargo llvm-cov nextest --all-features --fail-under-lines 95 --fail-under-functions 95 --html
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/llvm-cov/html

  build-matrix:
    needs: [lint, test-linux]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            target: x86_64-unknown-linux-gnu
          - name: linux-aarch64
            target: aarch64-unknown-linux-gnu
          - name: macos-x86_64
            target: x86_64-apple-darwin
          - name: macos-aarch64
            target: aarch64-apple-darwin
          - name: windows-x86_64
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev gcc-aarch64-linux-gnu
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --bin oc-rsync
      - name: Package artifacts
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/oc-rsync dist/oc-rsync-${{ matrix.name }}
          sha256sum dist/oc-rsync-${{ matrix.name }} > dist/oc-rsync-${{ matrix.name }}.sha256
          cargo install cyclonedx-rust-cargo || true
          cyclonedx-rust-cargo --output dist/oc-rsync-${{ matrix.name }}-sbom.json
      - uses: actions/upload-artifact@v4
        with:
          name: oc-rsync-${{ matrix.name }}
          path: dist

  package-linux:
    needs: [test-linux, build-matrix]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libacl1-dev
      - name: Install packaging tools
        run: cargo install cargo-deb cargo-generate-rpm || true
      - name: Build packages
        run: |
          cargo deb -p oc-rsync
          cargo generate-rpm
      - uses: actions/upload-artifact@v4
        with:
          name: oc-rsync-packages
          path: |
            target/debian/*.deb
            target/generate-rpm/*.rpm

