name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - run: rustup component add rustfmt clippy
      - name: Install cross
        if: matrix.use-cross == true
        run: cargo install cross --locked
      - name: Install cargo-fuzz
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: |
          cargo install cargo-fuzz --locked
          rustup toolchain install nightly
      - name: Generate flag matrix
        run: |
          cargo run --bin flag_matrix
          git diff --exit-code tools/flag_matrix.md tools/flag_matrix.json
      - name: Format
        run: cargo fmt --all --check
      - name: Clippy
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross clippy --all-targets --all-features --target ${{ matrix.target }} -- -D warnings
          else
            cargo clippy --all-targets --all-features -- -D warnings
          fi
      - name: Tests
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross test --all --target ${{ matrix.target }}
          else
            cargo test --all --target ${{ matrix.target }}
          fi
      - name: Install cargo-tarpaulin
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: cargo install cargo-tarpaulin --locked
      - name: Coverage
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: cargo tarpaulin --out Xml --output-dir coverage
      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.target }}
          path: coverage
      - name: Golden parity tests
        if: matrix.use-cross == false && matrix.os != 'windows-latest'
        run: make test-golden
      - name: Interop tests
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: bash scripts/interop.sh
      - name: Interop matrix tests
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false && env.INTEROP_MATRIX == '1'
        run: bash tests/interop/run_matrix.sh
      - name: Fuzz smoke test
        if: matrix.os == 'ubuntu-latest' && matrix.use-cross == false
        run: |
          timeout 60s cargo +nightly fuzz run filters_parse_fuzz -- -max_total_time=30
          timeout 60s cargo +nightly fuzz run filters -- -max_total_time=30

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install cross
        if: matrix.use-cross == true
        run: cargo install cross --locked
      - name: Build release binary
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin rsync-rs
          else
            cargo build --release --target ${{ matrix.target }} --bin rsync-rs
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rsync-rs-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rsync-rs

  nightly-fuzz:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: cargo install cargo-fuzz --locked
      - name: Run fuzzers
        run: |
          for target in $(cargo +nightly fuzz list); do
            cargo +nightly fuzz run "$target" -- -max_total_time=600
          done

  windows-coverage:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: llvm-tools-preview
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --locked
      - name: Generate coverage report
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-windows
          path: lcov.info
